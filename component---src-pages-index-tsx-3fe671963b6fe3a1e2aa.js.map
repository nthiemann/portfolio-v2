{"version":3,"file":"component---src-pages-index-tsx-3fe671963b6fe3a1e2aa.js","mappings":"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","sources":["webpack://portfolio-v2/./src/components/Navbar/navbar.module.css","webpack://portfolio-v2/./src/components/Navbar/navbar.tsx","webpack://portfolio-v2/./src/components/Seo/seo.tsx","webpack://portfolio-v2/./src/components/Typography/typography.tsx","webpack://portfolio-v2/./src/components/Typography/typography.module.css","webpack://portfolio-v2/./src/pages/index.module.css","webpack://portfolio-v2/./src/components/SkillChart/skillchart.tsx","webpack://portfolio-v2/./src/components/SkillChart/skillchart.module.css","webpack://portfolio-v2/./src/components/ProjectsGrid/projectsgrid.tsx","webpack://portfolio-v2/./src/components/ProjectsGrid/projectsgrid.module.css","webpack://portfolio-v2/./src/components/techbucket/techbucket.tsx","webpack://portfolio-v2/./src/pages/index.tsx","webpack://portfolio-v2/./src/utils.ts","webpack://portfolio-v2/./node_modules/guid-typescript/dist/guid.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport var gitIcon = \"navbar-module--git-icon--b205c\";\nexport var iconContainer = \"navbar-module--icon-container--609ac\";\nexport var navLinkItem = \"navbar-module--nav-link-item--24d96\";\nexport var navLinks = \"navbar-module--nav-links--d8aac\";","import { Link } from \"gatsby\";\nimport * as React from \"react\";\nimport { navLinks, navLinkItem, gitIcon } from \"./navbar.module.css\";\nimport Typography from \"../Typography/typography\";\nimport GithubIcon from \"../assets/github-mark-white.svg\";\nimport config from \"../../../config.json\";\n\nconst GITHUB_LINK = config.github_link;\n\nconst Navbar: React.FC = () => {\n  return (\n    <nav>\n      <ul className={navLinks}>\n        <li className={navLinkItem}>\n          <Link to=\"/\">\n            <Typography>Home</Typography>\n          </Link>\n        </li>\n        <li className={navLinkItem}>\n          <Link to=\"/blog\">\n            <Typography>Blog</Typography>\n          </Link>\n        </li>\n        <li>\n          <a href={GITHUB_LINK} target=\"_blank\" rel=\"noopener noreferrer\">\n            {/* <GithubIcon className={gitIcon}></GithubIcon> */}\n          </a>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import * as React from \"react\";\nimport { graphql, useStaticQuery } from \"gatsby\";\n\ntype SeoProps = {\n  title?: string;\n};\n\nconst Seo: React.FC<SeoProps> = ({ title }) => {\n  const data = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `);\n\n  return (\n    <title>\n      {title} | {data.site.siteMetadata.title}\n    </title>\n  );\n};\n\nexport default Seo;\n","import React, { ReactNode } from \"react\";\nimport { light, dark } from \"./typography.module.css\";\n\ntype Variant = \"p\" | \"h1\" | \"h2\" | \"h3\" | \"h4\" | \"h5\" | \"h6\";\n\ntype TypographyProps = {\n  variant?: Variant;\n  color?: \"light\" | \"dark\";\n  children: ReactNode;\n} & React.HTMLProps<HTMLElement>;\n\nconst colorMappings = {\n  light: light,\n  dark: dark,\n};\n\nconst Typography: React.FC<TypographyProps> = ({\n  variant = \"p\",\n  color = \"light\",\n  children,\n  ...rest\n}) => {\n  const variantEl = variant as keyof JSX.IntrinsicElements; // Ensure variant is a valid HTML tag\n\n  return React.createElement(\n    variantEl,\n    { className: colorMappings[color], ...rest },\n    children\n  );\n};\n\nexport default Typography;\n","// extracted by mini-css-extract-plugin\nexport var dark = \"typography-module--dark--fe94f\";\nexport var light = \"typography-module--light--75169\";","// extracted by mini-css-extract-plugin\nexport var body = \"index-module--body--4606d\";\nexport var container = \"index-module--container--f8c32\";\nexport var fade = \"index-module--fade--a4c85\";\nexport var headerSection = \"index-module--header-section--99099\";\nexport var jetbrainsMonoFont = \"index-module--jetbrains-mono-font--fd433\";\nexport var section1 = \"index-module--section1--6b5eb\";\nexport var transition = \"index-module--transition--17b00\";","import React, { useEffect } from \"react\";\nimport config from \"../../../config.json\";\nimport * as styles from \"./skillchart.module.css\";\nimport Typography from \"../Typography/typography\";\nimport { Guid } from \"guid-typescript\";\n\ninterface Skills {\n  [name: string]: number;\n}\n\nconst SKILLS: Skills = config.skills;\nconst MAX_RANK = config.max_skill_rank;\n\nconst SkillChart: React.FC = () => {\n  const isEmpty = Object.keys(SKILLS).length < 1;\n\n  useEffect(() => {\n    if (isEmpty) {\n      return;\n    }\n  }, []);\n\n  return isEmpty ? (\n    <></>\n  ) : (\n    <table>\n      {Object.entries(SKILLS)\n        .toSorted((a, b) => b[1] - a[1])\n        .map(([key, value]) => {\n          return (\n            <tr key={key}>\n              <td>\n                <div className={styles.skillName}>\n                  <Typography>{key}</Typography>\n                </div>\n              </td>\n              {Array.from({ length: value }).map((_, index) => (\n                <td key={Guid.create().toString()}>\n                  <div className={styles.pointSquare}></div>\n                </td>\n              ))}\n              {Array.from({ length: MAX_RANK - value }).map((_, index) => (\n                <td key={value + index}>\n                  <div className={styles.pointSquareEmpty}></div>\n                </td>\n              ))}\n            </tr>\n          );\n        })}\n    </table>\n  );\n};\nexport default SkillChart;\n","// extracted by mini-css-extract-plugin\nexport var fade = \"skillchart-module--fade--0c919\";\nexport var pointSquare = \"skillchart-module--point-square--8b07c\";\nexport var pointSquareEmpty = \"skillchart-module--point-square-empty--aea05\";\nexport var skillName = \"skillchart-module--skill-name--3df06\";","import React from \"react\";\nimport * as styles from \"./projectsgrid.module.css\";\nimport Typography from \"../Typography/typography\";\n/**\n * @description A showcase of projects I have worked on\n */\nconst ProjectsGrid: React.FC = () => {\n  return (\n    <div className={styles.emptyState}>\n      <Typography variant=\"h3\">Projects View - Coming Soon</Typography>\n    </div>\n  );\n};\n\nexport default ProjectsGrid;\n","// extracted by mini-css-extract-plugin\nexport var emptyState = \"projectsgrid-module--empty-state--48a56\";","import React, { useEffect, useRef } from \"react\";\nimport Matter from \"matter-js\";\n\nexport const TechBucket = () => {\n  const boxRef = useRef(null);\n  const canvasRef = useRef(null);\n\n  useEffect(() => {\n    let Engine = Matter.Engine;\n    let Render = Matter.Render;\n    let World = Matter.World;\n    let Bodies = Matter.Bodies;\n\n    let engine = Engine.create({});\n\n    let render = Render.create({\n      element: boxRef.current,\n      engine: engine,\n      canvas: canvasRef.current,\n      options: {\n        width: 300,\n        height: 300,\n        background: \"rgba(255, 0, 0, 0.5)\",\n        wireframes: false,\n      },\n    });\n\n    const floor = Bodies.rectangle(150, 300, 300, 20, {\n      isStatic: true,\n      render: {\n        fillStyle: \"blue\",\n      },\n    });\n\n    const ball = Bodies.circle(150, 0, 10, {\n      restitution: 0.9,\n      render: {\n        fillStyle: \"yellow\",\n      },\n    });\n\n    World.add(engine.world, [floor, ball]);\n\n    //Engine.run(engine);\n    Matter.Runner.run(engine);\n    Render.run(render);\n  }, []);\n\n  return (\n    <div\n      ref={boxRef}\n      style={{\n        width: 300,\n        height: 300,\n      }}\n    >\n      <canvas ref={canvasRef} />\n    </div>\n  );\n};\n\nexport default TechBucket;\n","import * as React from \"react\";\nimport type { HeadFC, PageProps } from \"gatsby\";\nimport Seo from \"../components/Seo/seo\";\nimport * as styles from \"./index.module.css\";\nimport Typography from \"../components/Typography/typography\";\nimport Navbar from \"../components/Navbar/navbar\";\nimport SkillChart from \"../components/SkillChart/skillchart\";\nimport ProjectsGrid from \"../components/ProjectsGrid/projectsgrid\";\nimport TechBucket from \"../components/techbucket/techbucket\";\nimport { isFeatureToggled } from \"../utils\";\nconst TITLE = \"Home\";\n\nconst IndexPage: React.FC<PageProps> = () => {\n  return (\n    <>\n      <div className={styles.headerSection}>\n        <Navbar />\n        <div className={styles.container}>\n          <Typography variant=\"h1\">Nicholas Thiemann</Typography>\n          <Typography variant=\"h2\">Web Developer</Typography>\n        </div>\n      </div>\n      <div className={styles.transition} />\n      <div className={styles.section1}>\n        <SkillChart />\n        <ProjectsGrid />\n      </div>\n      {isFeatureToggled(\"tech_bucket\") && (\n        <div className={styles.section1}>\n          <TechBucket />\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default IndexPage;\n\nexport const Head: HeadFC = () => {\n  return (\n    <>\n      <Seo title={TITLE} />;\n      <body className={styles.body} />\n    </>\n  );\n};\n","import config from \"../config.json\";\n\n/**\n * Contains a suite of utility functions\n */\n\n/**\n *\n * @param id The feature toggle id found in config.json\n * @returns a boolean denoting whether the feature is toggled on\n */\nexport function isFeatureToggled(id: string): boolean {\n  const toggles: { [index: string]: any } = config.feature_toggles;\n\n  if (!(id in toggles)) {\n    const errorMsg = `Feature toggle ID \"${id}\" not found in config.`;\n    console.error(errorMsg);\n    throw new Error(errorMsg);\n  }\n\n  return toggles[id];\n}\n","\"use strict\";\r\nexports.__esModule = true;\r\nvar Guid = /** @class */ (function () {\r\n    function Guid(guid) {\r\n        if (!guid) {\r\n            throw new TypeError(\"Invalid argument; `value` has no value.\");\r\n        }\r\n        this.value = Guid.EMPTY;\r\n        if (guid && Guid.isGuid(guid)) {\r\n            this.value = guid;\r\n        }\r\n    }\r\n    Guid.isGuid = function (guid) {\r\n        var value = guid.toString();\r\n        return guid && (guid instanceof Guid || Guid.validator.test(value));\r\n    };\r\n    Guid.create = function () {\r\n        return new Guid([Guid.gen(2), Guid.gen(1), Guid.gen(1), Guid.gen(1), Guid.gen(3)].join(\"-\"));\r\n    };\r\n    Guid.createEmpty = function () {\r\n        return new Guid(\"emptyguid\");\r\n    };\r\n    Guid.parse = function (guid) {\r\n        return new Guid(guid);\r\n    };\r\n    Guid.raw = function () {\r\n        return [Guid.gen(2), Guid.gen(1), Guid.gen(1), Guid.gen(1), Guid.gen(3)].join(\"-\");\r\n    };\r\n    Guid.gen = function (count) {\r\n        var out = \"\";\r\n        for (var i = 0; i < count; i++) {\r\n            // tslint:disable-next-line:no-bitwise\r\n            out += (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n        }\r\n        return out;\r\n    };\r\n    Guid.prototype.equals = function (other) {\r\n        // Comparing string `value` against provided `guid` will auto-call\r\n        // toString on `guid` for comparison\r\n        return Guid.isGuid(other) && this.value === other.toString();\r\n    };\r\n    Guid.prototype.isEmpty = function () {\r\n        return this.value === Guid.EMPTY;\r\n    };\r\n    Guid.prototype.toString = function () {\r\n        return this.value;\r\n    };\r\n    Guid.prototype.toJSON = function () {\r\n        return {\r\n            value: this.value\r\n        };\r\n    };\r\n    Guid.validator = new RegExp(\"^[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}$\", \"i\");\r\n    Guid.EMPTY = \"00000000-0000-0000-0000-000000000000\";\r\n    return Guid;\r\n}());\r\nexports.Guid = Guid;\r\n"],"names":["navLinkItem","GITHUB_LINK","config","Navbar","React","className","Link","to","Typography","href","target","rel","_ref","title","data","useStaticQuery","site","siteMetadata","colorMappings","light","dark","variant","color","children","rest","variantEl","section1","SKILLS","MAX_RANK","SkillChart","isEmpty","Object","keys","length","useEffect","entries","toSorted","a","b","map","key","value","Array","from","_","index","Guid","create","toString","ProjectsGrid","TechBucket","boxRef","useRef","canvasRef","Engine","Matter","Render","World","Bodies","engine","render","element","current","canvas","options","width","height","background","wireframes","floor","rectangle","isStatic","fillStyle","ball","circle","restitution","add","world","run","ref","style","IndexPage","styles","isFeatureToggled","Head","Seo","id","toggles","errorMsg","console","error","Error","guid","TypeError","this","EMPTY","isGuid","validator","test","gen","join","createEmpty","parse","raw","count","out","i","Math","random","substring","prototype","equals","other","toJSON","RegExp","exports"],"sourceRoot":""}