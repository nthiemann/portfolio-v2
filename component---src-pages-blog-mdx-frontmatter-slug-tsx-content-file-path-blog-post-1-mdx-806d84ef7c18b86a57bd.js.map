{"version":3,"file":"component---src-pages-blog-mdx-frontmatter-slug-tsx-content-file-path-blog-post-1-mdx-806d84ef7c18b86a57bd.js","mappings":"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","sources":["webpack://portfolio-v2/./blog/post-1.mdx","webpack://portfolio-v2/./src/pages/blog/{mdx.frontmatter__slug}.tsx","webpack://portfolio-v2/./src/components/BlogBodyEl/blogbodyel.tsx","webpack://portfolio-v2/./src/components/BlogBodyEl/blogbodyel.module.css","webpack://portfolio-v2/./src/components/Layout/layout.tsx","webpack://portfolio-v2/./src/components/Layout/layout.module.css","webpack://portfolio-v2/./src/components/Navbar/navbar.module.css","webpack://portfolio-v2/./src/components/Navbar/navbar.tsx","webpack://portfolio-v2/./src/components/Seo/seo.tsx","webpack://portfolio-v2/./src/components/Typography/typography.tsx","webpack://portfolio-v2/./src/components/Typography/typography.module.css","webpack://portfolio-v2/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    em: \"em\",\n    h3: \"h3\",\n    a: \"a\",\n    h2: \"h2\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"How do \", React.createElement(_components.em, null, \"you\"), \" prepare for a Dungeons and Dragons campaign?\\nMaybe you have a master Google Doc with all relevant\\ninformation. Maybe you pull from that document and\\ncreate session-specific notes.\"), \"\\n\", React.createElement(_components.p, null, \"Of course, maybe you feel that such a method of\\npreparation just works. After all, it's gotten you\\nthis far. But this method can be flawed. The world of\\na D&D game is vast. You should be keeping track of \", React.createElement(_components.em, null, \"many\"), \"\\nthings happening at once in the world and story. Keeping\\nall this information straight is not for the faint of heart.\\nAnd simple note-taking strategies aren't good enough - at least\\nnot for the grand, epic stories we all strive to create.\"), \"\\n\", React.createElement(_components.p, null, \"I'm here to tell you that we, as both storywriters\\nand worldbuilders, can do better.\"), \"\\n\", React.createElement(_components.p, null, \"What we need is a way to represent the game visually. Traditional notes simply\\ndon't capture the complexity of what the game can become.\\nWe can instead use diagrams as the centerpiece of our preparation tools.\"), \"\\n\", React.createElement(_components.h3, null, \"Enter, Obsidian\"), \"\\n\", React.createElement(_components.p, null, \"Join the \", React.createElement(_components.a, {\n    href: \"https://www.fastcompany.com/90960653/why-people-are-obsessed-with-obsidian-the-indie-darling-of-notetaking-apps\"\n  }, \"cult of Obsidian\"), \".\\nThis tool has changed my work and personal life. And no, this is not sponsored. Obsidian allows you to create canvases - stupid-easy-to-use\\ndiagrams that are perfect for our needs. We will cover more about Obsidian throughout this post,\\nbut I recommend \", React.createElement(_components.a, {\n    href: \"https://obsidian.md/\"\n  }, \"downloading\"), \" it if you want to follow along. (It's free)\"), \"\\n\", React.createElement(_components.h2, null, \"Part 1 - Mind Maps\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://en.wikipedia.org/wiki/Mind_map\"\n  }, \"Mind maps\"), \" Are perfect for plotting a story. They are a good first step for understanding\\nhigh-level networks of entities in the story.\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Each story subject is a node. This can be a character, place, event, and so on.\"), \"\\n\", React.createElement(_components.li, null, \"Each link between nodes represents a connection between these nouns.\"), \"\\n\", React.createElement(_components.li, null, \"This map lets us identify which parts of the narrative to focus on.\"), \"\\n\", React.createElement(_components.li, null, \"This map also exposes gaps in the story that may need intervention by you to fill.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"My Rule 1 of D&D Dungeonmastering is to put players first,\\nso creating the players and their relevant backstory events, NPCs, and places is a good starting point.\"), \"\\n\", React.createElement(_components.h2, null, \"Part 2 - Timelines\"), \"\\n\", React.createElement(_components.p, null, \"Updating a single timeline is certainly preferred over scattered notes of events.\"), \"\\n\", React.createElement(_components.p, null, \"INSERT PICTURE\"), \"\\n\", React.createElement(_components.p, null, \"This allows us to prepare for complex decision trees. It gives us the confidence to run\\nsessions and prepare for more paths the players might take.\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/Users/nickt/Development/Projects/portfolio-v2/blog/post-1.mdx\";\nimport * as React from \"react\";\nimport Layout from \"../../components/Layout/layout\";\nimport Seo from \"../../components/Seo/seo\";\nimport Typography from \"../../components/Typography/typography\";\nimport BlogBodyEl from \"../../components/BlogBodyEl/blogbodyel\";\nconst BlogPost = _ref => {\n  var _data$mdx$frontmatter, _data$mdx, _data$mdx$frontmatter2, _data$mdx2, _data$mdx2$frontmatte;\n  let {data, children} = _ref;\n  return React.createElement(Layout, {\n    pageTitle: (_data$mdx$frontmatter = data === null || data === void 0 ? void 0 : (_data$mdx = data.mdx) === null || _data$mdx === void 0 ? void 0 : (_data$mdx$frontmatter2 = _data$mdx.frontmatter) === null || _data$mdx$frontmatter2 === void 0 ? void 0 : _data$mdx$frontmatter2.title) !== null && _data$mdx$frontmatter !== void 0 ? _data$mdx$frontmatter : undefined\n  }, (data === null || data === void 0 ? void 0 : (_data$mdx2 = data.mdx) === null || _data$mdx2 === void 0 ? void 0 : (_data$mdx2$frontmatte = _data$mdx2.frontmatter) === null || _data$mdx2$frontmatte === void 0 ? void 0 : _data$mdx2$frontmatte.date) && React.createElement(Typography, null, data.mdx.frontmatter.date), children);\n};\nconst query = \"3237460933\";\nBlogPost\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(BlogPost, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const Head = _ref2 => {\n  var _data$mdx$frontmatter3, _data$mdx3, _data$mdx3$frontmatte;\n  let {data} = _ref2;\n  return React.createElement(React.Fragment, null, React.createElement(Seo, {\n    title: (_data$mdx$frontmatter3 = data === null || data === void 0 ? void 0 : (_data$mdx3 = data.mdx) === null || _data$mdx3 === void 0 ? void 0 : (_data$mdx3$frontmatte = _data$mdx3.frontmatter) === null || _data$mdx3$frontmatte === void 0 ? void 0 : _data$mdx3$frontmatte.title) !== null && _data$mdx$frontmatter3 !== void 0 ? _data$mdx$frontmatter3 : undefined\n  }), React.createElement(BlogBodyEl, null));\n};\n","import React from \"react\";\nimport { background } from \"./blogbodyel.module.css\";\n\n/**\n * @description This exists as a common body that can be referenced by any HeadApi component.\n * It's to get around gatsby's trash way of handling this tag.\n * @returns a `<body>` element appropriately styled for all blog pages.\n */\nconst BlogBodyEl: React.FC = () => {\n  return <body className={background} />;\n};\n\nexport default BlogBodyEl;\n","// extracted by mini-css-extract-plugin\nexport var background = \"blogbodyel-module--background--def2a\";","import * as React from \"react\";\nimport Navbar from \"../Navbar/navbar\";\nimport { container, heading } from \"./layout.module.css\";\nimport Typography from \"../Typography/typography\";\nimport * as CSS from \"csstype\";\n\ntype LayoutProps = {\n  children: React.ReactNode;\n  pageTitle?: string;\n  maxWidth?: CSS.Properties[\"maxWidth\"];\n};\n\n/**\n *\n * @description Standard common page layout with title and styling\n * @param pageTitle The title to render at the top of the page\n * @param maxWidth The maximum width, in pixels, of the page content.\n */\nconst Layout: React.FC<LayoutProps> = ({ pageTitle, maxWidth, children }) => {\n  return (\n    <div>\n      <Navbar />\n      <main\n        className={container}\n        style={maxWidth != undefined ? { maxWidth } : undefined}\n      >\n        {pageTitle && (\n          <Typography className={heading} variant=\"h1\">\n            {pageTitle}\n          </Typography>\n        )}\n        {children}\n      </main>\n    </div>\n  );\n};\n\nexport default Layout;\n","// extracted by mini-css-extract-plugin\nexport var container = \"layout-module--container--66d73\";\nexport var heading = \"layout-module--heading--037a1\";\nexport var page = \"layout-module--page--c7c81\";","// extracted by mini-css-extract-plugin\nexport var gitIcon = \"navbar-module--git-icon--b205c\";\nexport var iconContainer = \"navbar-module--icon-container--609ac\";\nexport var navLinkItem = \"navbar-module--nav-link-item--24d96\";\nexport var navLinks = \"navbar-module--nav-links--d8aac\";","import { Link } from \"gatsby\";\nimport * as React from \"react\";\nimport { navLinks, navLinkItem, gitIcon } from \"./navbar.module.css\";\nimport Typography from \"../Typography/typography\";\nimport GithubIcon from \"../assets/github-mark-white.svg\";\nimport config from \"../../../config.json\";\n\nconst GITHUB_LINK = config.github_link;\n\nconst Navbar: React.FC = () => {\n  return (\n    <nav>\n      <ul className={navLinks}>\n        <li className={navLinkItem}>\n          <Link to=\"/\">\n            <Typography>Home</Typography>\n          </Link>\n        </li>\n        <li className={navLinkItem}>\n          <Link to=\"/blog\">\n            <Typography>Blog</Typography>\n          </Link>\n        </li>\n        <li>\n          <a href={GITHUB_LINK} target=\"_blank\" rel=\"noopener noreferrer\">\n            {/* <GithubIcon className={gitIcon}></GithubIcon> */}\n          </a>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import * as React from \"react\";\nimport { graphql, useStaticQuery } from \"gatsby\";\n\ntype SeoProps = {\n  title?: string;\n};\n\nconst Seo: React.FC<SeoProps> = ({ title }) => {\n  const data = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `);\n\n  return (\n    <title>\n      {title} | {data.site.siteMetadata.title}\n    </title>\n  );\n};\n\nexport default Seo;\n","import React, { ReactNode } from \"react\";\nimport { light, dark } from \"./typography.module.css\";\n\ntype Variant = \"p\" | \"h1\" | \"h2\" | \"h3\" | \"h4\" | \"h5\" | \"h6\";\n\ntype TypographyProps = {\n  variant?: Variant;\n  color?: \"light\" | \"dark\";\n  children: ReactNode;\n} & React.HTMLProps<HTMLElement>;\n\nconst colorMappings = {\n  light: light,\n  dark: dark,\n};\n\nconst Typography: React.FC<TypographyProps> = ({\n  variant = \"p\",\n  color = \"light\",\n  children,\n  ...rest\n}) => {\n  const variantEl = variant as keyof JSX.IntrinsicElements; // Ensure variant is a valid HTML tag\n\n  return React.createElement(\n    variantEl,\n    { className: colorMappings[color], ...rest },\n    children\n  );\n};\n\nexport default Typography;\n","// extracted by mini-css-extract-plugin\nexport var dark = \"typography-module--dark--fe94f\";\nexport var light = \"typography-module--light--75169\";","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","em","h3","a","h2","ul","li","_provideComponents","components","React","href","wrapper","MDXLayout","BlogPost","_ref","_data$mdx$frontmatter","_data$mdx","_data$mdx$frontmatter2","_data$mdx2","_data$mdx2$frontmatte","data","children","Layout","pageTitle","mdx","frontmatter","title","undefined","date","Typography","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","Head","_ref2","_data$mdx$frontmatter3","_data$mdx3","_data$mdx3$frontmatte","Seo","BlogBodyEl","className","maxWidth","Navbar","style","variant","navLinkItem","GITHUB_LINK","config","Link","to","target","rel","useStaticQuery","site","siteMetadata","colorMappings","light","dark","color","rest","variantEl","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}